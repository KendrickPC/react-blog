{"ast":null,"code":"var _jsxFileName = \"/Users/kenneth/Desktop/CCPro/react-blog/Client/src/hooks/hook1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useReducer } from 'react';\nimport * as ACTIONS from '../store/actions/actions';\nimport * as Reducer1 from '../store/reducers/plain_reducer';\nimport Context from '../utils/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HooksContainer1 = () => {\n  _s();\n\n  const context = useContext(Context); //const value = useState(0)[0]\n  //const setValue = useState(0)[1]\n\n  const [value, setValue] = useState(0);\n  const [useEffectValue, setUseEffectValue] = useState(null);\n  const [state, dispatch] = useReducer(Reducer1.Reducer1, Reducer1.initialState);\n  useEffect(() => {\n    setTimeout(() => setUseEffectValue(\"useEffect worked\"), 3000);\n  }, [value]);\n\n  const incrementValue = () => {\n    setValue(value + 1);\n  };\n\n  const decrementValue = () => {\n    setValue(value - 1);\n  };\n\n  const handleuseEffectValue = () => {\n    setUseEffectValue(\"some string\");\n  };\n\n  const handleDispatchTrue = () => {\n    //    dispatch2(type: \"SUCCESS\")\n    //    dispatch2(ACTIONS.SUCCESS)\n    dispatch(ACTIONS.success());\n  };\n\n  const handleDispatchFalse = () => {\n    //     dispatch2(type: \"FAILURE\")\n    //    dispatch2(ACTIONS.FAILURE)\n    dispatch(ACTIONS.failure());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleuseEffectValue(),\n        children: \" Handle Value  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDispatchTrue(),\n        children: \"Dispatch True \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDispatchFalse(),\n        children: \"Dispatch False \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => context.dispatchContextTrue(),\n        children: \"Dispatch Context True \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => context.dispatchContextFalse(),\n        children: \"Dispatch Context False \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => incrementValue(),\n        children: \" Add Local Value \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => decrementValue(),\n        children: \" Dec Local Value \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), context.useContextSubmitState ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", context.useContextSubmitState, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" No User Text \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), state.stateprop1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" stateprop1 is true \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" stateprop1 is false \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), context.stateProp2 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" stateprop2 is true \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" stateprop2 is false \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), useEffectValue ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", useEffectValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No value \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Local Value: \", value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HooksContainer1, \"rbF96M2eoHKaAoC8lrr9BhzoUnY=\");\n\n_c = HooksContainer1;\nexport default HooksContainer1;\n\nvar _c;\n\n$RefreshReg$(_c, \"HooksContainer1\");","map":{"version":3,"sources":["/Users/kenneth/Desktop/CCPro/react-blog/Client/src/hooks/hook1.js"],"names":["React","useContext","useState","useEffect","useReducer","ACTIONS","Reducer1","Context","HooksContainer1","context","value","setValue","useEffectValue","setUseEffectValue","state","dispatch","initialState","setTimeout","incrementValue","decrementValue","handleuseEffectValue","handleDispatchTrue","success","handleDispatchFalse","failure","dispatchContextTrue","dispatchContextFalse","useContextSubmitState","stateprop1","stateProp2"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useReducer } from 'react';\r\nimport * as ACTIONS from '../store/actions/actions';\r\nimport * as Reducer1 from '../store/reducers/plain_reducer';\r\nimport Context from '../utils/context';\r\n\r\n\r\nconst HooksContainer1 = () => {\r\n  const context = useContext(Context)\r\n\r\n  //const value = useState(0)[0]\r\n  //const setValue = useState(0)[1]\r\n  const [value, setValue] = useState(0)\r\n\r\n  const [useEffectValue, setUseEffectValue] = useState(null)\r\n\r\n  const [state, dispatch] = useReducer(Reducer1.Reducer1, Reducer1.initialState)\r\n\r\n  useEffect(() => {\r\n      setTimeout(() => setUseEffectValue(\"useEffect worked\"), 3000 );\r\n  }, [value])\r\n\r\n  const incrementValue = () => {\r\n    setValue(value + 1 )\r\n  }\r\n\r\n  const decrementValue = () => {\r\n    setValue(value - 1 )\r\n  }\r\n\r\n  const handleuseEffectValue = () => {\r\n    setUseEffectValue(\"some string\")\r\n  }\r\n\r\n  const handleDispatchTrue = () => {\r\n    //    dispatch2(type: \"SUCCESS\")\r\n    //    dispatch2(ACTIONS.SUCCESS)\r\n    dispatch(ACTIONS.success())\r\n  }\r\n\r\n  const handleDispatchFalse = () => {\r\n    //     dispatch2(type: \"FAILURE\")\r\n    //    dispatch2(ACTIONS.FAILURE)\r\n    dispatch(ACTIONS.failure())\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n      <button onClick={() => handleuseEffectValue()}> Handle Value  </button>\r\n      <button onClick={() => handleDispatchTrue()}>Dispatch True </button>\r\n      <button onClick={() => handleDispatchFalse()}>Dispatch False </button>\r\n      <button onClick={() => context.dispatchContextTrue()}>Dispatch Context True </button>\r\n      <button onClick={() => context.dispatchContextFalse()}>Dispatch Context False </button>\r\n      <button onClick={() => incrementValue()}> Add Local Value </button>\r\n      <button onClick={() => decrementValue()}> Dec Local Value </button>\r\n      <br />\r\n      <br />\r\n      {context.useContextSubmitState\r\n        ? <h3> {context.useContextSubmitState} </h3>\r\n        : <h3> No User Text </h3>\r\n      }\r\n      <br />\r\n      {state.stateprop1\r\n        ? <p> stateprop1 is true </p>\r\n        : <p> stateprop1 is false </p>\r\n      }\r\n      <br />\r\n      {context.stateProp2\r\n        ? <p> stateprop2 is true </p>\r\n        : <p> stateprop2 is false </p>\r\n      }\r\n      <br />\r\n      {useEffectValue\r\n        ? <p> { useEffectValue }</p>\r\n        : <p> No value </p>\r\n      }\r\n      <br />\r\n      <p>Local Value: {value}</p>\r\n      <br />\r\n      <br />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default HooksContainer1;\r\n"]},"metadata":{},"sourceType":"module"}